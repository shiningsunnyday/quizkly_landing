import React, { Component } from 'react';
import Flashcard from './Flashcard.js';
import { Button } from 'primereact/button';
import './Interface.css';

class Flashcards extends Component  {

  constructor(props) {
    super(props);
    this.state.quiz = props.quiz;
    console.log(props.quiz);
    this.state.randoQuiz = props.quiz;
    var shuffle = require('shuffle-array');
    this.state.randoQuiz.quiz = shuffle(props.quiz.quiz);
    for(var ques = 0; ques < this.state.randoQuiz.quiz.length; ques++) {
      var correctIndex = this.state.randoQuiz.quiz[ques].correctIndex;
      var correctAns = this.state.randoQuiz.quiz[ques].answers[correctIndex];
      this.state.randoQuiz.quiz[ques].answers = shuffle(this.state.randoQuiz.quiz[ques].answers);
      this.state.randoQuiz.quiz[ques].correctIndex = this.state.randoQuiz.quiz[ques].answers.indexOf(correctAns);
    }
  }

  state = {
    quiz: null,
    randoOrder: null,
    curIndex: -1,
    clickedIndex: -1,
  }

  random() {
    this.setState({curIndex: 0});
  }

  answerClick(e) {
    console.log(e.target.getAttribute('index'));
    this.setState({clickedIndex: e.target.getAttribute('index')});
  }
  //
  // <div style={styles.earthlings}>Hey earthlings, are you ready to tackle the quiz generated by our powerful machine learning models?</div>
  // <div style={styles.poison}>Pick your poison</div>

  render() {
    if(this.state.curIndex === -1) {
      return(
        <div style={styles.welcomeScreen}>
          <div style={styles.options}>
            <div onClick={() => this.setState({quiz: this.state.randoQuiz, curIndex: 0,})} style={styles.option}>Random</div>
            <div onClick={() => this.setState({curIndex: 0})} style={styles.option}>Original</div>
          </div>
        </div>
      )
    }
    if(this.state.curIndex === this.state.quiz.quiz.length) {
      return(
        <div style={styles.welcomeScreen}>
        </div>
      )
    }
    console.log("FLASHCARD QUESTION ", this.state.quiz);
    return (
      <div style={styles.flashcard}>
        <div style={styles.navButtonDiv}
          onClick={() => this.setState({clickedIndex: -1, curIndex: this.state.curIndex - 1})}>
          <Button icon="pi pi-arrow-left" style={styles.navButton}/>
        </div>
        <Flashcard
          total={this.state.quiz.quiz.length}
          cur={this.state.curIndex}
          style={styles.flashcardCenter}
          clickedIndex={this.state.clickedIndex}
          answerClick={this.answerClick.bind(this)}
          question={this.state.quiz.quiz[this.state.curIndex]} />
        <div style={styles.navButtonDiv}
          onClick={() => this.setState({clickedIndex: -1, curIndex: (this.state.curIndex + 1)})}>
          <Button icon="pi pi-arrow-right" style={styles.navButton}/>
        </div>
      </div>
    )
  }


}

const styles = {
  welcomeScreen: {
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'stretch',
    backgroundColor: 'yellow',
    position: 'relative',
    width: '100%',
    height: '100%',
  },
  earthlings: {
    flex: 1.5,
    margin: '5%',
    marginBottom: '0%',
    textAlign: 'center',
    fontFamily: 'Lato',
    fontSize: '200%'
  },
  poison: {
    flex: 1,
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center',
    fontFamily: 'Lato',
    fontSize: '300%'
  },
  options: {
    flex: 2,
    display: 'flex',
    flexDirection: 'row',
    backgroundColor: 'yellow',
    justifyContent: 'center',
    alignItems: 'stretch',
  },
  flashcard: {
    position: 'relative',
    display: 'flex',
    flexDirection: 'row',
    backgroundColor: 'yellow',
    width: '100%',
    height: '100%'
  },
  flashcardCenter: {
    flex: 4,
  },
  navButtonDiv: {
    position: 'relative',
    display: 'flex',
    alignItems: 'center',
    width: '20%',
  },
  navButton: {
    position: 'relative',
    height: '10%',
    left: '25%',
    width: '50%',
  },
  option: {
    flex: 1,
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center',
    cursor: 'pointer',
    fontFamily: 'Lato',
    fontSize: '400%',
  },
}

export default Flashcards;

        // <Flashcard question={quiz[]} choices={quiz[]} />
